name: Release

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy to which environment'
        required: true
        default: 'test'
        type: choice
        options:
        - test
        - production
      create_tag:
        description: 'Create git tag'
        required: true
        default: 'true'
        type: boolean
      version:
        description: 'Version (without v prefix) to tag (leave empty to use pyproject.toml version)'
        required: false
        type: string
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - closed

permissions:
  contents: write
  actions: write
  id-token: write

jobs:
  test-release:
    name: TestPyPI Release
    if: |
      (github.event_name == 'workflow_dispatch' && inputs.environment == 'test') ||
      (github.event_name == 'pull_request' &&
       github.event.pull_request.merged == false &&
       startsWith(github.head_ref, 'release/') &&
       (github.event.action == 'opened' || github.event.action == 'synchronize'))
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Upgrade pip
        run: |
          pip install --constraint=requirements/constraints.txt pip setuptools
          pip --version

      - name: Install Poetry
        run: |
          pip install --constraint=requirements/constraints.txt poetry
          poetry --version

      - name: Bump version for TestPyPI release
        run: |
          CURRENT_VERSION=$(poetry version | awk '{ print $2 }')
          poetry version $CURRENT_VERSION.dev.$(date +%s)

      - name: Build package
        run: |
          poetry build --ansi

      - name: Publish package on TestPyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true


  release:
    name: PyPI Release
    if: |
      (github.event_name == 'workflow_dispatch' && inputs.environment == 'production') ||
      (github.event_name == 'pull_request' &&
       github.event.pull_request.merged == true &&
       startsWith(github.head_ref, 'release/'))
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Upgrade pip
        run: |
          pip install --constraint=requirements/constraints.txt pip setuptools
          pip --version

      - name: Install Poetry
        run: |
          pip install --constraint=requirements/constraints.txt poetry
          poetry --version

      - name: Check version change
        id: version-check
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            if [ -n "${{ inputs.version }}" ]; then
              echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
              echo "changed=true" >> $GITHUB_OUTPUT
            else
              CURRENT_VERSION=$(poetry version | awk '{ print $2 }')
              echo "version=${CURRENT_VERSION}" >> $GITHUB_OUTPUT
              echo "changed=true" >> $GITHUB_OUTPUT
            fi
          else
            CURRENT_VERSION=$(poetry version | awk '{ print $2 }')
            git checkout HEAD^
            PREVIOUS_VERSION=$(poetry version | awk '{ print $2 }')
            git checkout -
            if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
              echo "changed=true" >> $GITHUB_OUTPUT
              echo "version=${CURRENT_VERSION}" >> $GITHUB_OUTPUT
            else
              echo "changed=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Bump version and push tag
        id: create-tag
        if: steps.version-check.outputs.changed == 'true'
        uses: mathieudutour/github-tag-action@a22cf08638b34d5badda920f9daf6e72c477b07b
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.version-check.outputs.version }}

      - name: Build package
        run: |
          poetry build --ansi

      - name: Publish package on PyPI
        if: steps.version-check.outputs.changed == 'true' && steps.create-tag.outputs.new_tag != ''
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
        with:
          verbose: true

      - name: Publish the release notes
        uses: release-drafter/release-drafter@b1476f6e6eb133afa41ed8589daba6dc69b4d3f5 # v6.1.0
        if: steps.version-check.outputs.changed == 'true' && steps.create-tag.outputs.new_tag != ''
        with:
          publish: ${{ steps.create-tag.outputs.new_tag != '' }}
          tag: ${{ steps.create-tag.outputs.new_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
