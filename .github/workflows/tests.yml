name: Tests

on:
  - push
  - pull_request

permissions:
  contents: read
  actions: read
  checks: write # Required for uploading test results

jobs:
  tests:
    name: ${{ matrix.session }} ${{ matrix.python }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python: "3.14", os: "ubuntu-latest", session: "pre-commit" }
          - { python: "3.14", os: "ubuntu-latest", session: "mypy" }
          - { python: "3.13", os: "ubuntu-latest", session: "mypy" }
          - { python: "3.12", os: "ubuntu-latest", session: "mypy" }
          - { python: "3.11", os: "ubuntu-latest", session: "mypy" }
          - { python: "3.10", os: "ubuntu-latest", session: "mypy" }
          - { python: "3.14", os: "ubuntu-latest", session: "tests" }
          - { python: "3.13", os: "ubuntu-latest", session: "tests" }
          - { python: "3.12", os: "ubuntu-latest", session: "tests" }
          - { python: "3.11", os: "ubuntu-latest", session: "tests" }
          - { python: "3.10", os: "ubuntu-latest", session: "tests" }
          - { python: "3.14", os: "windows-latest", session: "tests" }
          - { python: "3.13", os: "windows-latest", session: "tests" }
          - { python: "3.12", os: "windows-latest", session: "tests" }
          - { python: "3.11", os: "windows-latest", session: "tests" }
          - { python: "3.10", os: "windows-latest", session: "tests" }
          - { python: "3.14", os: "macos-latest", session: "tests" }
          - { python: "3.13", os: "macos-latest", session: "tests" }
          - { python: "3.12", os: "macos-latest", session: "tests" }
          - { python: "3.11", os: "macos-latest", session: "tests" }
          - { python: "3.10", os: "macos-latest", session: "tests" }
          - { python: "3.14", os: "ubuntu-latest", session: "docs-build" }

    env:
      NOXSESSION: ${{ matrix.session }}
      FORCE_COLOR: "1"
      PRE_COMMIT_COLOR: "always"

    steps:
      - name: Check out the repository
        uses: actions/checkout@v5

      - name: Set up uv
        uses: astral-sh/setup-uv@v7
        with:
          uv-version: 0.9.2

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python }}

      - name: Install Nox
        run: pipx install 'nox>=2025.05.01'

      - name: Run Nox
        run: nox --python=${{ matrix.python }}

      - name: Upload coverage data
        if: always() && matrix.session == 'tests' && matrix.python == '3.13' && matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data
          path: .coverage.*
          include-hidden-files: true

      - name: Upload documentation
        if: matrix.session == 'docs-build'
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: docs/_build

  coverage:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repository
        uses: actions/checkout@v5

      - name: Set up uv
        uses: astral-sh/setup-uv@v7
        with:
          uv-version: 0.9.2

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.14"

      - name: Install Nox
        run: pipx install 'nox>=2025.05.01'

      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          name: coverage-data

      - name: Combine coverage data and display human readable report
        run: nox --session=coverage

      - name: Create coverage report
        run: nox --session=coverage -- xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        with:
          name: fastapi-injectable
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
